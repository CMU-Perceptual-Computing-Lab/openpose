# This will run on Travis' 'new' container-based infrastructure

# Blacklist
branches:
  only:
    - master

# Environment variables + OS + other parameters
global:
  - GH_REPO_NAME: openpose
  - DOXYFILE: $TRAVIS_BUILD_DIR/doc/doc_autogeneration.doxygen
  # Set this in Environment Variables on travis-ci.org
  # - GH_REPO_REF: github.com/<user_name>/openpose.git
matrix:
  # Use a build matrix to test many builds in parallel
  # envvar defaults:
  #   WITH_CMAKE: true
  #   WITH_PYTHON3: false
  #   WITH_CUDA: true
  #   WITH_CUDNN: true
  # - BUILD_NAME="default-cmake-cuda8"
  # - BUILD_NAME="default-make-cuda8" WITH_CMAKE=false
  # - BUILD_NAME="default-cmake-cpu" WITH_CUDA=false
  # - BUILD_NAME="python3-cmake-cuda8" WITH_PYTHON3=true
  # - BUILD_NAME="default-make-cuda8_nocudnn" WITH_CUDNN=false
  include:
  # Ubuntu 16.04 - Default - CMake - CPU
  - os: linux
    dist: xenial
    env: BUILD_NAME="default-cmake-cpu" WITH_CUDA=false
    sudo: required
  # Ubuntu 14.04 - Default - CMake - CPU
  - os: linux
    dist: trusty
    env: BUILD_NAME="default-cmake-cpu" WITH_CUDA=false
    sudo: required
  # # Ubuntu 12.04 - Default - CMake - CPU
  # - os: linux
  #   dist: precise # 12.04
  #   env: BUILD_NAME="default-cmake-cpu" WITH_CUDA=false
  #   sudo: required
  # Mac OSX - Default - CMake - CPU
  - os: osx
    osx_image: xcode10.1 # Versions: https://docs.travis-ci.com/user/languages/objective-c#supported-xcode-versions
    env: BUILD_NAME="default-cmake-cpu" WITH_CUDA=false
    sudo: required

# Install apt dependencies
addons:
  apt:
    packages:
      - doxygen
      - doxygen-doc
      - doxygen-latex
      - doxygen-gui
      - graphviz

# Install Caffe and OP dependencies
install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo bash ./scripts/travis/install_deps_ubuntu.sh ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo bash ./scripts/travis/install_deps_osx.sh ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then exit 99 ; fi

# Running CMake
before_script:
  - bash ./scripts/travis/configure.sh

# Build your code e.g., by calling make
script:
  - bash ./scripts/travis/run_make.sh

# Generate and deploy documentation
after_success:
  - cd $TRAVIS_BUILD_DIR
  - chmod +x .github/generate_gh_pages.sh
  - ./.github/generate_gh_pages.sh
